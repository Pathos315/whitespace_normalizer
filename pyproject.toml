[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "whitespace-normalizer"
version = "0.3.0"
description = "A whitespace normalizing application for normalizing whitespaces, which can optionally autocorrect spelling errors in the text."
authors = ["John Fallot <john.fallot@gmail.com>"]
license = "MIT"
keywords = ["whitespace", "normalizer"]
readme = "README.md"
homepage = "https://github.com/Pathos315/whitespace_normalizer"
repository = "https://github.com/Pathos315/whitespace_normalizer"
packages = [
    { include = "src" },
]

[tool.poetry.dependencies]
python = ">=3.10"
pyspellchecker = "(>=0.8.2,<0.9.0)"
pyperclip = "(>=1.9.0,<2.0.0)"
types-pyperclip = "(>=1.9.0.20250218,<2.0.0.0)"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^24.3.0"
mypy = "^1.8.0"
flake8 = "^7.0.0"
pre-commit = "^3.6.0"
ruff = "^0.3.4"
commitizen = "^3.15.0"
pyinstaller = "^6.6.0"
isort = "*"
bandit = "*"
safety = "*"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
bump_message = "chore(release): bump version $current_version â†’ $new_version"
version_files = ["pyproject.toml:version"]
update_changelog_on_bump = true
annotated_tag = true

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.ruff]
line-length = 88
target-version = "py310"
select = ["E", "F", "I", "N", "B", "C4", "SIM", "UP"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py39-{linux,macos,windows}, py310-{linux,macos,windows}, py311-{linux,macos,windows}

[testenv]
platform =
    linux: linux
    macos: darwin
    windows: win32
deps =
    pytest
    pytest-cov
commands =
    linux: pytest --cov=src tests/ -v {posargs} -k "not requires_macos and not requires_windows"
    macos: pytest --cov=src tests/ -v {posargs} -k "not requires_linux and not requires_windows"
    windows: pytest --cov=src tests/ -v {posargs} -k "not requires_linux and not requires_macos"
"""
